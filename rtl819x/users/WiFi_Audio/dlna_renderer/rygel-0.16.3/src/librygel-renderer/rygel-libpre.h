/* rygel-core.h generated by valac 0.16.1, the Vala compiler, do not modify */


#ifndef __RYGEL_LIBPRE_H__
#define __RYGEL_LIBPRE_H__
#include <glib.h>
#include <glib-object.h>
#include <libgupnp/gupnp.h>
#include <gst/gst.h>
#define DEFAULT_RTPSINK_PID_FILENAME "/var/run/rtpsink-pid"
#define DEFAULT_AUDIO_SINKC_OMP_PID_FILENAME		("/var/run/audiosinkcomp-pid")
#define DEFAULT_DLNA_PID_FILENAME		("/var/run/renderer-pid")	
#define DEFAULT_AIRPID_FILENAME "/var/run/airfun-pid"
#define DEFAULT_AUDIO_SINK_PLAYER_PID_FILENAME "/var/run/audiosinkp-pid"
#define DEFAULT_NETRADIO_PID_FILENAME "var/run/netradio-pid"
#define DEFAULT_PULSE_PID "/var/pulse/runtime/pid"
#include "wfshm.h"

#if 0
struct _RygelChangeLogClass {
	GObjectClass parent_class;
};

struct _RygelChangeLogPrivate {
	GUPnPService* _service;
	gchar* service_ns;
	GString* str;
	GeeHashMap* hash;
	guint timeout_id;
	int isForReject;
};
struct _RygelChangeLog {
	GObject parent_instance;
	RygelChangeLogPrivate * priv;
};
#endif
int isCurrentServedClient(GUPnPServiceAction* current_action);
void ChangeDlnaStateOwner(unsigned int state);
void UpdateDlnaKilledState(void);
unsigned int StopWFOwner(WFSHM_T	*OrigWFShareBuff);
int GetCurrentRight(void);
int CheckCurrentRight(void);
int initCurrentOwner(void);
void libpre_signal_handler(int sig);
#endif
