<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="RygelSubtitle">
<refmeta>
<refentrytitle role="top_of_page" id="RygelSubtitle.top_of_page">RygelSubtitle</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBRYGEL-SERVER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>RygelSubtitle</refname>
<refpurpose>Represents a subtitle for a video.</refpurpose>
</refnamediv>

<refsynopsisdiv id="RygelSubtitle.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="RYGEL-TYPE-SUBTITLE:CAPS">RYGEL_TYPE_SUBTITLE</link>
<link linkend="RygelSubtitle"><returnvalue>RygelSubtitle</returnvalue></link> *     <link linkend="rygel-subtitle-new">rygel_subtitle_new</link>                  (<parameter>const <link linkend="gchar"><type>gchar</type></link> *mime_type</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *caption_type</parameter>);
struct              <link linkend="RygelSubtitle-struct">RygelSubtitle</link>;
<link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>            <link linkend="rygel-subtitle-ref">rygel_subtitle_ref</link>                  (<parameter><link linkend="gpointer"><type>gpointer</type></link> instance</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rygel-subtitle-unref">rygel_subtitle_unref</link>                (<parameter><link linkend="gpointer"><type>gpointer</type></link> instance</parameter>);
<link linkend="GParamSpec"><returnvalue>GParamSpec</returnvalue></link> *        <link linkend="rygel-param-spec-subtitle">rygel_param_spec_subtitle</link>           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *nick</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *blurb</parameter>,
                                                         <parameter><link linkend="GType"><type>GType</type></link> object_type</parameter>,
                                                         <parameter><link linkend="GParamFlags"><type>GParamFlags</type></link> flags</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rygel-value-set-subtitle">rygel_value_set_subtitle</link>            (<parameter><link linkend="GValue"><type>GValue</type></link> *value</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> v_object</parameter>);
<link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>            <link linkend="rygel-value-get-subtitle">rygel_value_get_subtitle</link>            (<parameter>const <link linkend="GValue"><type>GValue</type></link> *value</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rygel-value-take-subtitle">rygel_value_take_subtitle</link>           (<parameter><link linkend="GValue"><type>GValue</type></link> *value</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> v_object</parameter>);
struct              <link linkend="RygelSubtitleClass">RygelSubtitleClass</link>;
</synopsis>
</refsynopsisdiv>
<refsect1 id="RygelSubtitle.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  RygelSubtitle
</synopsis>
</refsect1>

<refsect1 id="RygelSubtitle.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="RygelSubtitle.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="RYGEL-TYPE-SUBTITLE:CAPS" role="macro">
<title>RYGEL_TYPE_SUBTITLE</title>
<indexterm zone="RYGEL-TYPE-SUBTITLE:CAPS"><primary>RYGEL_TYPE_SUBTITLE</primary></indexterm>
<programlisting>#define RYGEL_TYPE_SUBTITLE (rygel_subtitle_get_type ())
</programlisting>
<para>
The type for <link linkend="RygelSubtitle"><type>RygelSubtitle</type></link>.
</para></refsect2>
<refsect2 id="rygel-subtitle-new" role="function">
<title>rygel_subtitle_new ()</title>
<indexterm zone="rygel-subtitle-new"><primary>rygel_subtitle_new</primary></indexterm>
<programlisting><link linkend="RygelSubtitle"><returnvalue>RygelSubtitle</returnvalue></link> *     rygel_subtitle_new                  (<parameter>const <link linkend="gchar"><type>gchar</type></link> *mime_type</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *caption_type</parameter>);</programlisting>
</refsect2>
<refsect2 id="RygelSubtitle-struct" role="struct">
<title>struct RygelSubtitle</title>
<indexterm zone="RygelSubtitle-struct"><primary>RygelSubtitle</primary></indexterm>
<programlisting>struct RygelSubtitle;</programlisting>
<para>
Represents a subtitle for a video.
</para></refsect2>
<refsect2 id="rygel-subtitle-ref" role="function">
<title>rygel_subtitle_ref ()</title>
<indexterm zone="rygel-subtitle-ref"><primary>rygel_subtitle_ref</primary></indexterm>
<programlisting><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>            rygel_subtitle_ref                  (<parameter><link linkend="gpointer"><type>gpointer</type></link> instance</parameter>);</programlisting>
<para>
Increases the reference count of <parameter>object</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="RygelSubtitle"><type>RygelSubtitle</type></link>.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the same <parameter>object</parameter></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rygel-subtitle-unref" role="function">
<title>rygel_subtitle_unref ()</title>
<indexterm zone="rygel-subtitle-unref"><primary>rygel_subtitle_unref</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rygel_subtitle_unref                (<parameter><link linkend="gpointer"><type>gpointer</type></link> instance</parameter>);</programlisting>
<para>
Decreases the reference count of <parameter>object</parameter>. When its reference count drops to 0, the object is finalized (i.e. its memory is freed).
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="RygelSubtitle"><type>RygelSubtitle</type></link>.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rygel-param-spec-subtitle" role="function">
<title>rygel_param_spec_subtitle ()</title>
<indexterm zone="rygel-param-spec-subtitle"><primary>rygel_param_spec_subtitle</primary></indexterm>
<programlisting><link linkend="GParamSpec"><returnvalue>GParamSpec</returnvalue></link> *        rygel_param_spec_subtitle           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *nick</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *blurb</parameter>,
                                                         <parameter><link linkend="GType"><type>GType</type></link> object_type</parameter>,
                                                         <parameter><link linkend="GParamFlags"><type>GParamFlags</type></link> flags</parameter>);</programlisting>
<para>
Creates a new <link linkend="GParamSpecBoxed"><type>GParamSpecBoxed</type></link> instance specifying a <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived property.
</para>
<para>
See <link linkend="g-param-spec-internal"><function><link linkend="g-param-spec-internal"><function>g_param_spec_internal()</function></link></function></link> for details on property names.
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>canonical name of the property specified</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nick</parameter>&#160;:</term>
<listitem><simpara>nick name for the property specified</simpara></listitem></varlistentry>
<varlistentry><term><parameter>blurb</parameter>&#160;:</term>
<listitem><simpara>description of the property specified</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_type</parameter>&#160;:</term>
<listitem><simpara><link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived type of this property</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>flags for the property specified</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rygel-value-set-subtitle" role="function">
<title>rygel_value_set_subtitle ()</title>
<indexterm zone="rygel-value-set-subtitle"><primary>rygel_value_set_subtitle</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rygel_value_set_subtitle            (<parameter><link linkend="GValue"><type>GValue</type></link> *value</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> v_object</parameter>);</programlisting>
<para>
Set the contents of a <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived <link linkend="GValue"><type>GValue</type></link> to <parameter>v_object</parameter>.
</para>
<para>
<link linkend="rygel-value-set-subtitle"><function><link linkend="rygel-value-set-subtitle"><function>rygel_value_set_subtitle()</function></link></function></link> increases the reference count of <parameter>v_object</parameter> (the <link linkend="GValue"><type>GValue</type></link> holds a reference to <parameter>v_object</parameter>). If you do not wish to increase the reference count of the object (i.e. you wish to pass your current reference to the <link linkend="GValue"><type>GValue</type></link> because you no longer need it), use <link linkend="rygel-value-take-subtitle"><function><link linkend="rygel-value-take-subtitle"><function>rygel_value_take_subtitle()</function></link></function></link> instead.
</para>
<para>
It is important that your <link linkend="GValue"><type>GValue</type></link> holds a reference to <parameter>v_object</parameter> (either its own, or one it has taken) to ensure that the object won't be destroyed while the <link linkend="GValue"><type>GValue</type></link> still exists).
</para><variablelist role="params">
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a valid <link linkend="GValue"><type>GValue</type></link> of <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived type</simpara></listitem></varlistentry>
<varlistentry><term><parameter>v_object</parameter>&#160;:</term>
<listitem><simpara>object value to be set</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rygel-value-get-subtitle" role="function">
<title>rygel_value_get_subtitle ()</title>
<indexterm zone="rygel-value-get-subtitle"><primary>rygel_value_get_subtitle</primary></indexterm>
<programlisting><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>            rygel_value_get_subtitle            (<parameter>const <link linkend="GValue"><type>GValue</type></link> *value</parameter>);</programlisting>
<para>
Get the contents of a <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived <link linkend="GValue"><type>GValue</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a valid <link linkend="GValue"><type>GValue</type></link> of <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived type</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>object contents of <parameter>value</parameter></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rygel-value-take-subtitle" role="function">
<title>rygel_value_take_subtitle ()</title>
<indexterm zone="rygel-value-take-subtitle"><primary>rygel_value_take_subtitle</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rygel_value_take_subtitle           (<parameter><link linkend="GValue"><type>GValue</type></link> *value</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> v_object</parameter>);</programlisting>
<para>
Sets the contents of a <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived <link linkend="GValue"><type>GValue</type></link> to <parameter>v_object</parameter> and takes over the ownership of the callers reference to <parameter>v_object</parameter>; the caller doesn't have to unref it any more (i.e. the reference count of the object is not increased).
</para>
<para>
If you want the GValue to hold its own reference to <parameter>v_object</parameter>, use <link linkend="rygel-value-set-subtitle"><function><link linkend="rygel-value-set-subtitle"><function>rygel_value_set_subtitle()</function></link></function></link> instead.
</para><variablelist role="params">
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a valid <link linkend="GValue"><type>GValue</type></link> of <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link> derived type</simpara></listitem></varlistentry>
<varlistentry><term><parameter>v_object</parameter>&#160;:</term>
<listitem><simpara>object value to be set</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="RygelSubtitleClass" role="struct">
<title>struct RygelSubtitleClass</title>
<indexterm zone="RygelSubtitleClass"><primary>RygelSubtitleClass</primary></indexterm>
<programlisting>struct RygelSubtitleClass {
	GTypeClass parent_class;
	void (*finalize) (RygelSubtitle *self);
};
</programlisting>
<para>
The class structure for <link linkend="RYGEL-TYPE-SUBTITLE:CAPS"><literal>RYGEL_TYPE_SUBTITLE</literal></link>. All the fields in this structure are private and should never be accessed directly.
</para><variablelist role="struct">
<varlistentry><term><link linkend="GTypeClass"><type>GTypeClass</type></link>&#160;<structfield id="RygelSubtitleClass.parent-class">parent_class</structfield>;</term>
<listitem><simpara>the parent class structure</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="RygelSubtitleClass.finalize">finalize</structfield>&#160;()</term>
<listitem />
</varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
